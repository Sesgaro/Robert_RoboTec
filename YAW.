#include <Wire.h>

const int MPU_ADDR = 0x68;  // Dirección I2C del MPU6050

int16_t gyro_z;  // Variable para el dato crudo del giroscopio

void setup() {
  Serial.begin(115200);
  Wire.begin();

  // Inicializar el MPU6050
  Wire.beginTransmission(MPU_ADDR);
  Wire.write(0x6B);  // Registro de administración de energía
  Wire.write(0);     // Sacar del modo de suspensión
  Wire.endTransmission(true);
}

void loop() {
  // Leer datos del giroscopio
  Wire.beginTransmission(MPU_ADDR);
  Wire.write(0x47);  // Dirección del registro del giroscopio Z
  Wire.endTransmission(false);
  Wire.requestFrom(MPU_ADDR, 2, true);  // Pedir 2 bytes

  // Convertir datos crudos a un entero de 16 bits
  gyro_z = Wire.read() << 8 | Wire.read();

  // Convertir a grados por segundo (°/s)
  float gz = gyro_z / 131.0;  // MPU6050 en ±250°/s → 131 LSB/°/s

  // Imprimir la velocidad angular
  Serial.print("Velocidad angular en Z (°/s): ");
  Serial.println(gz, 4);  // Mostrar con 4 decimales

  delay(100);  // Ajustar el delay si es necesario
}